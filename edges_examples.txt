edges = {
    "A": {
        "dst": ["B"],
        "weight": [12, 13, 15],
        "hazard": [1,1,1],
        "location": (5, 10,0)
    },
    "B": {
        "dst": ["A", "C", "D"],
        "weight": [12, 23, 24],
        "hazard": [1,1,1],
        "location": (10, 10,0)
    },
    "C": {
        "dst": ["A", "B", "D"],
        "weight": [13, 23, 34],
        "hazard": [1,1,1],
        "location": (5, 15,0)
    },
    "D": {
        "dst": ["C", "B"],
        "weight": [34, 24],
        "hazard": [1,1],
        "location": (15, 15,0)
    },
    "E": {
        "dst": ["A", "F"],
        "weight": [15,56],
        "hazard": [1,1],
        "location": (20, 15,0)
    },
    "F": {
        "dst": ["E"],
        "weight": [56],
        "hazard": [1],
        "location": (20, 20,0)
    }

}


''' while heap.num_nodes:
        u = fheappop(heap)
        u = heap.extract_min()
        for dst, weight, hazard in graph[u.key[1]].edges:
            if dist[dst] > dist[u.key[1]] + weight * hazard:
                dist[dst] = dist[u.key[1]] + weight * hazard
                prev[dst] = u.key[1]
                #print(u.key)
                heap.decrease_key(heap[dst], prev[dst])

    # SEE IF DECREASE_KEY(H,V) MAKES ANY DIFFERENCE (see OneNote pseudocode)
    ## CHECK WITH BIGGER GRAPHS, SMALL GRAPHS DON'T SHOW DIFFERENCE'''